name: NDR Platform v2.1.0 CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Critical Fixes Validation (v2.1.0)
      run: |
        echo "Running critical fixes validation for NDR Platform v2.1.0..."
        python test_encoding_fixes.py
        python test_results_saving.py
        python test_feedback_dirs.py
        python test_final_verification.py
    
    - name: Run security scan
      run: |
        python scripts/security_scanner.py all
    
    - name: Run comprehensive test suite
      run: |
        python scripts/dev_utils.py test --coverage
    
    - name: Verify platform structure
      run: |
        python scripts/verify_structure.py
    
    - name: Health check
      run: |
        python scripts/health_check.py

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Final validation before build
      run: |
        echo "Final validation for NDR Platform v2.1.0 build..."
        python test_final_verification.py
        python scripts/verify_structure.py
    
    - name: Build Docker image (if deployment directory exists)
      run: |
        if [ -d "deployment" ]; then
          cd deployment
          docker build -t ndr-platform:v2.1.0 .
        else
          echo "Deployment directory not found, skipping Docker build"
        fi
    
    - name: Test Docker container (if available)
      run: |
        if [ -d "deployment" ] && [ -f "deployment/docker-compose.yml" ]; then
          cd deployment
          docker-compose up -d
          sleep 30
          docker-compose down
        else
          echo "Docker compose not available, skipping container test"
        fi

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deployment readiness check
      run: |
        echo "NDR Platform v2.1.0 Production Deployment Readiness Check"
        echo "✅ Critical fixes validated"
        echo "✅ Security scan passed"  
        echo "✅ All tests passed"
        echo "✅ Structure verified"
        echo "✅ Health check passed"
        echo "Ready for production deployment"
    
    - name: Deploy to production
      run: |
        echo "NDR Platform v2.1.0 production deployment would happen here"
        echo "Platform is production-ready with all critical fixes applied"
        # Add actual deployment steps here when ready
