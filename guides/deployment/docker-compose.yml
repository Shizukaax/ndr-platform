version: '3.8'

# NDR Platform v2.1.0 - Production-Ready Network Detection & Response
# Author: Shizukaax <justinchua@tunglok.com>
# Repository: https://github.com/Shizukaax/ndr-platform
# Version: 2.1.0 - Production ready with critical fixes applied
# Critical Fixes: NaN handling, Unicode encoding, Arrow serialization, directory validation

services:
  ndr-platform:
    build:
      context: ..
      dockerfile: guides/deployment/Dockerfile
    container_name: ndr-platform-v2.1.0
    ports:
      - "8501:8501"
    volumes:
      # Production mount: /opt/arkime/json -> /app/data
      # Development mount: ./data -> /app/data
      - /opt/arkime/json:/app/data:ro  # Read-only access to Arkime JSON data
      - ./models:/app/models
      - ./logs:/app/logs
      - ./results:/app/results  # ✅ CRITICAL: Fixed results saving compatibility
      - ./feedback:/app/feedback  # ✅ CRITICAL: Fixed directory structure validation
      - ./config:/app/config
      - ./cache:/app/cache  # ✅ CRITICAL: Persistent anomaly tracking storage
      - ./reports:/app/reports
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - STREAMLIT_SERVER_FILE_WATCHER_TYPE=none
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      # ✅ NDR Platform v2.1.0 Production Environment Variables
      - NDR_VERSION=2.1.0
      - NDR_ANOMALY_STORAGE_DIR=/app/cache/anomalies
      - NDR_MODELS_DIR=/app/models
      - NDR_ENABLE_BASELINE_LEARNING=true
      - NDR_DEFAULT_MODEL_TYPE=ensemble
      - NDR_ENABLE_UNICODE_VALIDATION=true  # ✅ CRITICAL: Unicode encoding fixes
      - NDR_ENABLE_NAN_VALIDATION=true      # ✅ CRITICAL: NaN value protection
      - NDR_ARROW_COMPATIBILITY_MODE=true   # ✅ CRITICAL: Arrow serialization fixes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - ndr-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: ndr-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - ndr-platform
    restart: unless-stopped
    networks:
      - ndr-network
    profiles:
      - production

networks:
  ndr-network:
    driver: bridge

volumes:
  ndr-data:
    driver: local